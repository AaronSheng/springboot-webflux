group 'com.aaron'
version '1.0.0'

buildscript {
    ext {
        kotlinVersion = '1.2.41'
        gradleShadowVersion = "2.0.2"
        gradleJooqVersion = "2.0.7"
        gradleDependencyVersion = "1.0.4.RELEASE"
        springBootVersion = "2.1.3.RELEASE"
        apacheCommonVersion = "2.6.1"
        swaggerVersion = "1.5.17"
        jaxrsVersion = "2.0"
        jacksonVersion = "2.9.2"
        hashidsVersion = "1.0.3"
        feignVersion = "9.5.1"
        okHttpVersion = "3.9.1"
        commonExecVersion = "1.3"
        bouncyCastleVersion = "1.46"
        dom4jVersion = "1.6.1"
        slf4jVersion = "1.7.25"
        mockitoVersion = "1.10.19"
        compressVersion = "1.15"
        jsonLibVersion = "2.4"
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "nu.studer:gradle-jooq-plugin:$gradleJooqVersion"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "io.spring.gradle:dependency-management-plugin:$gradleDependencyVersion"
        classpath "com.github.jengelman.gradle.plugins:shadow:$gradleShadowVersion"
    }
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: "kotlin-spring"
apply plugin: "io.spring.dependency-management"
apply plugin: "org.springframework.boot"

sourceCompatibility = 1.8
targetCompatibility = 1.8

task copyToRelease(type: Copy, dependsOn: build) {
    from("build/libs") {
        include("**/*.jar")
    }
    into "${projectDir}/release"
    outputs.upToDateWhen { false }
}
build.dependsOn copyToRelease

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

configurations {
    all*.exclude group: "org.springframework.boot", module: "spring-boot-starter-tomcat"
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-webflux"
    compile "org.springframework.boot:spring-boot-starter-reactor-netty"
    compile "org.springframework.boot:spring-boot-starter-aop"
    compile "org.springframework.boot:spring-boot-starter-data-redis-reactive"
    compile "org.springframework.boot:spring-boot-starter-jersey"
    compile "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    compile "io.swagger:swagger-annotations:$swaggerVersion"
    compile "javax.ws.rs:javax.ws.rs-api:$jaxrsVersion"
    compile "io.swagger:swagger-jersey2-jaxrs:$swaggerVersion"

    compile "org.apache.commons:commons-pool2:$apacheCommonVersion"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:$jacksonVersion"
    compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-base:$jacksonVersion"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}